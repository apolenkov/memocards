---
alwaysApply: true
autoFix: true
version: "2.0.0"
---

# Java 21 + Spring Boot 3 + Vaadin 24 + PostgreSQL

## STACK
Java 21 | Spring Boot 3 | Vaadin 24 | PostgreSQL | Spring Data JDBC | Lombok

## ARCHITECTURE
SOLID | DRY | KISS | Clean Arch (Domain→App→Infra→UI) | Constructor injection ONLY

**Limits**: Class <200-300 | Method <50 | Params <5 | Complexity <5-10 | Nesting <3

## LAYERS

**Domain**: Records (immutable) or @Data | PostgreSQL SERIAL/IDENTITY | Aggregates (NO lazy)

**Repository**: See @jdbc-best-practices | Port (interface) + Adapter (JdbcAdapter) | DTOs (Records) | SQL in *SqlQueries

**Service**: Interface + @Service | Constructor injection | Return DTOs | @Transactional

**Controller**: @RestController | @RequestMapping | REST (GET/POST/PUT/DELETE) | Try-catch + GlobalExceptionHandler

## CRITICAL [BAD]

- System.out → SLF4J
- @Autowired fields → constructor
- Hardcoded UI strings → getTranslation()
- SQL concat → parameterized (SQL injection!)
- FQN → imports (java/org, blank, com.*)
- SQL in methods → *SqlQueries class
- Instance RowMapper → static final
- Dead/commented code → remove
- @UIScope without @Lazy injection → scope conflict
- @Lazy for regular @Component dependencies → unnecessary overhead

## STANDARDS

**Locale**: ru-RU chat | EN code | **i18n**: getTranslation() | **Logging**: SLF4J structured | **Imports**: java/org→blank→com (NO FQN)

## PERFORMANCE & TESTING

**Perf**: Virtual Threads | Caching | Async | HikariCP
**Test**: 70% unit | 20% integration | 10% e2e | 80%+ coverage | AssertJ | TestContainers

## VAADIN & JDBC

**Vaadin**: @vaadin-best-practices | Composite<T> | Lifecycle | Memory cleanup | Lumo tokens
**JDBC**: @jdbc-best-practices | Adapter | Text Blocks | RETURNING | ON CONFLICT | Records

## SPRING DEPENDENCY INJECTION

**@Lazy**: Use for @UIScope dependencies | Avoid for regular @Component | Solve scope conflicts
**Constructor Injection**: Always prefer over @Autowired fields | Validate null parameters
**Scope Management**: @Component (singleton) | @UIScope (per UI) | @Lazy for cross-scope injection

## AUTO

Apply rules | Fix issues | Add tests | i18n | Security | Performance | Docs
