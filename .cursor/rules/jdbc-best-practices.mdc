---
alwaysApply: true
autoFix: true
version: "3.0.0"
---

# JDBC - Spring Data JDBC + PostgreSQL

## STACK
Spring Data JDBC (NOT JPA!) | JdbcTemplate | PostgreSQL | Records | Text Blocks

## ARCHITECTURE
- **Adapter**: `*JdbcAdapter implements *Repository` + @Profile({"dev","prod","test"})
- **RowMapper**: Static final (thread-safe)
- **SQL**: Text blocks in `*SqlQueries` class
- **DTOs**: Records with compact constructor validation (technical only)
- **Exceptions**: Catch DataAccessException → wrap in domain exceptions

## VALIDATION LAYERS
```
UI → Binder (format, length)
Service → Business (uniqueness, authorization, state)
DTO → Technical (null, blank, positive IDs)
Repository → NO validation (assumes valid)
```

## TRANSACTIONS
- @Transactional on Service ONLY (NOT Repository)
- readOnly=true for queries
- ALWAYS use (prevents connection leaks)

## CRITICAL ANTIPATTERNS
1. SQL injection → use `?` placeholders
2. Instance RowMapper → static final
3. Missing @Transactional → connection leak
4. N+1 queries → JOIN or batchUpdate()
5. Validation in Repository → should be in Service/DTO

## FLYWAY
- Naming: `V{version}__{description}.sql`
- NEVER modify applied migrations
- ONE migration per change
