# UI/UX Standards

## Vaadin Development
- **Prefer native Vaadin DSL** over JavaScript
- **Avoid executeJs** unless absolutely necessary
- **Use Vaadin's event system** and styling capabilities
- **Implement proper component lifecycle** with @PostConstruct
- **Leverage Vaadin's declarative API**
- **Use Vaadin's styling system** over custom CSS/JS

## Styling & Theming
- **Use Lumo theme tokens** for all styling (--lumo-space-s, --lumo-color-primary, etc.)
- **Avoid custom colors** and RGBA backgrounds
- **Follow BEM methodology** for CSS naming
- **Implement responsive design** with mobile-first approach
- **Use CSS custom properties** for consistent theming
- **Keep CSS specificity low** and avoid !important

## Internationalization (i18n)
- **Never use hardcoded strings** - always use getTranslation()
- **Implement i18n automatically** for all user-facing text
- **Support multiple languages** through proper message bundles
- **Extract all static text** into translation files
- **Validate i18n implementation** before completing components

## Accessibility
- **Use semantic HTML** elements
- **Implement proper ARIA labels** and contrast
- **Follow accessibility best practices** automatically
- **Test across different screen sizes** and browsers
- **Ensure keyboard navigation** support

## CSS Best Practices
- **Write clear, simple, and maintainable** CSS code
- **Avoid code duplication** - extract repeated elements into variables
- **Use CSS Grid and Flexbox** for modern layouts
- **Optimize performance** through efficient selectors
- **Document complex CSS logic** with clear comments
description:
globs:
alwaysApply: true
---
