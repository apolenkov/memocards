---
# =============================================================================
# ROLE: app
# Развертывание Memocards приложения через Docker Compose
# =============================================================================

- name: Copy Docker Compose configuration
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/../../docker-compose.yml"
    dest: "{{ app_deploy_path }}/docker-compose.yml"
    mode: "0644"
  tags: [app, config]

- name: Generate production environment file from template
  ansible.builtin.template:
    src: env.prod.j2
    dest: "{{ app_deploy_path }}/.env"
    mode: "0600"
    backup: true
  tags: [app, config]

- name: Pull application image from GHCR
  community.docker.docker_image_pull:
    name: "{{ app_image }}"
  register: app_image_pull_result
  tags: [app, deploy]

- name: Stop existing containers (if any)
  community.docker.docker_compose_v2:
    project_src: "{{ app_deploy_path }}"
    files: docker-compose.yml
    state: stopped
  failed_when: false
  tags: [app, deploy]

- name: Start application services
  community.docker.docker_compose_v2:
    project_src: "{{ app_deploy_path }}"
    files: docker-compose.yml
    state: present
    recreate: always
    pull: always
  register: app_compose_result
  tags: [app, deploy]

- name: Wait for PostgreSQL to be healthy
  ansible.builtin.shell: |
    STATUS=$(docker inspect --format='{% raw %}{{.State.Health.Status}}{% endraw %}' \
      memocards-postgres-prod 2>/dev/null || echo "not_found")
    [ "$STATUS" = "healthy" ]
  register: app_postgres_health
  retries: 30
  delay: 2
  until: app_postgres_health.rc == 0
  changed_when: false
  tags: [app, health]

- name: Wait for application to be ready
  ansible.builtin.uri:
    url: "http://localhost:{{ app_port }}/actuator/health"
    method: GET
    status_code: 200
  retries: 60
  delay: 5
  register: app_health_check
  until: app_health_check.status == 200
  tags: [app, health]

# Backup removed - not needed for MVP
# Monitoring removed - using Docker restart policy (restart: unless-stopped)

- name: Get container status
  ansible.builtin.command: docker compose -f {{ app_deploy_path }}/docker-compose.yml ps
  register: app_container_status
  changed_when: false
  tags: [app, verify]

- name: Display application deployment status
  ansible.builtin.debug:
    msg: |
      ✅ Application role completed:

      📦 Deployment:
      - Application image: {{ app_image }}
      - Health check: {{ 'PASSED ✅' if app_health_check.status == 200 else 'FAILED ❌' }}
      - Database: PostgreSQL (containerized)
      - Deploy path: {{ app_deploy_path }}

      🔧 Management:
      - Auto-restart: Enabled (Docker restart policy)
      - Logs: {{ app_deploy_path }}/logs

      🌐 Access:
      - URL: https://{{ domain }}
      - Health: http://{{ domain }}/actuator/health

      📋 Useful commands:
      - View logs: docker logs -f memocards-app-prod
      - Restart app: docker compose -f {{ app_deploy_path }}/docker-compose.yml restart app
      - Check status: docker compose -f {{ app_deploy_path }}/docker-compose.yml ps
  tags: [app]
