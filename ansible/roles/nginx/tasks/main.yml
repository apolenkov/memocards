---
# =============================================================================
# ROLE: nginx
# Установка Nginx, настройка SSL с Let's Encrypt и DuckDNS
# =============================================================================

- name: Install Nginx
  ansible.builtin.apt:
    name: nginx
    state: present
    update_cache: true
  tags: [nginx, install]

- name: Start and enable Nginx service
  ansible.builtin.systemd:
    name: nginx
    state: started
    enabled: true
  tags: [nginx, service]

- name: Remove default Nginx site
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Restart nginx
  tags: [nginx, config]

- name: Create Nginx configuration for Memocards
  ansible.builtin.template:
    src: memocards.conf.j2
    dest: /etc/nginx/sites-available/memocards.conf
    mode: "0644"
  notify: Reload nginx
  tags: [nginx, config]

- name: Enable Memocards Nginx site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/memocards.conf
    dest: /etc/nginx/sites-enabled/memocards.conf
    state: link
  notify: Reload nginx
  tags: [nginx, config]

- name: Test Nginx configuration
  ansible.builtin.command: nginx -t
  register: nginx_nginx_test
  changed_when: false
  tags: [nginx, config]

- name: Install Certbot and Nginx plugin
  ansible.builtin.apt:
    name:
      - certbot
      - python3-certbot-nginx
    state: present
  tags: [nginx, ssl]

- name: Fix urllib3 compatibility issue
  ansible.builtin.pip:
    name: urllib3
    version: "<2"
    state: present
  tags: [nginx, ssl]

- name: Install certbot-dns-duckdns plugin
  ansible.builtin.pip:
    name: certbot-dns-duckdns
    state: present
  tags: [nginx, ssl]

- name: Create DuckDNS credentials file for Certbot
  ansible.builtin.copy:
    content: |
      dns_duckdns_token = {{ vault_duckdns_token }}
    dest: /root/.duckdns_credentials.ini
    mode: "0600"
    owner: root
    group: root
  tags: [nginx, ssl]

- name: Create DuckDNS IP updater script
  ansible.builtin.template:
    src: duckdns-update.sh.j2
    dest: /usr/local/bin/duckdns-update.sh
    mode: "0755"
  tags: [nginx, duckdns]

- name: Install cron if not installed
  ansible.builtin.apt:
    name: cron
    state: present
  tags: [nginx, duckdns]

- name: Run DuckDNS updater immediately
  ansible.builtin.command: /usr/local/bin/duckdns-update.sh
  register: nginx_duckdns_initial_update
  changed_when: false
  tags: [nginx, duckdns]

- name: Create DuckDNS cron job
  ansible.builtin.cron:
    name: "DuckDNS IP updater"
    minute: "*/15"
    job: "/usr/local/bin/duckdns-update.sh"
    user: root
  tags: [nginx, duckdns]

- name: Wait for DNS propagation
  ansible.builtin.pause:
    seconds: 30
    prompt: "Waiting for DuckDNS DNS propagation..."
  tags: [nginx, ssl]

- name: Obtain SSL certificate with Certbot (DNS challenge)
  ansible.builtin.command: >
    certbot certonly
    --non-interactive
    --agree-tos
    --email {{ ssl_email }}
    --authenticator dns-duckdns
    --dns-duckdns-credentials /root/.duckdns_credentials.ini
    --dns-duckdns-propagation-seconds 60
    --domains {{ domain }}
    --expand
    --debug
  register: nginx_certbot_result
  failed_when: nginx_certbot_result.rc not in [0, 1] # 0=success, 1=cert exists
  changed_when: nginx_certbot_result.rc == 0
  tags: [nginx, ssl]

- name: Show certbot output on failure
  ansible.builtin.debug:
    msg: "{{ nginx_certbot_result.stdout_lines }}"
  when: nginx_certbot_result.rc != 0
  tags: [nginx, ssl]

- name: Update Nginx config to use SSL
  ansible.builtin.template:
    src: memocards-ssl.conf.j2
    dest: /etc/nginx/sites-available/memocards.conf
    mode: "0644"
  when: nginx_certbot_result.rc == 0
  notify: Reload nginx
  tags: [nginx, ssl]

- name: Keep HTTP config if SSL failed
  ansible.builtin.template:
    src: memocards.conf.j2
    dest: /etc/nginx/sites-available/memocards.conf
    mode: "0644"
  when: nginx_certbot_result.rc != 0
  notify: Reload nginx
  tags: [nginx, ssl]

- name: Verify SSL certificate
  ansible.builtin.stat:
    path: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
  register: nginx_ssl_cert
  tags: [nginx, ssl]

- name: Apply SSL config if certificate exists
  ansible.builtin.template:
    src: memocards-ssl.conf.j2
    dest: /etc/nginx/sites-available/memocards.conf
    mode: "0644"
  when: nginx_ssl_cert.stat.exists
  tags: [nginx, ssl]

- name: Always reload Nginx after SSL tasks
  ansible.builtin.systemd:
    name: nginx
    state: reloaded
  tags: [nginx, ssl]

- name: Create Certbot renewal cron job
  ansible.builtin.cron:
    name: "Certbot SSL renewal"
    minute: "0"
    hour: "2"
    job: "certbot renew --quiet --post-hook 'systemctl reload nginx'"
    user: root
  tags: [nginx, ssl]

- name: Display Nginx role completion
  ansible.builtin.debug:
    msg: |
      ✅ Nginx role completed:
      - Nginx installed and running
      - Configuration: /etc/nginx/sites-available/memocards.conf
      - SSL Certificate: {{ 'Installed ✅' if nginx_ssl_cert.stat.exists else 'Pending (check logs)' }}
      - DuckDNS updater: configured (every 15 minutes)
      - SSL auto-renewal: configured (daily at 2:00 AM)
      - Domain: {{ domain }}
      - Access: {{ 'https://' if nginx_ssl_cert.stat.exists else 'http://' }}{{ domain }}
  tags: [nginx]
