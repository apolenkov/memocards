spring:
  application:
    name: memocards
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:latest}
  output:
    ansi:
      enabled: ALWAYS
  threads:
    virtual:
      enabled: true
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 10000      # Fast failover (10s)
      validation-timeout: 3000       # Quick connection validation
      leak-detection-threshold: 60000  # Detect leaks after 60s
      idle-timeout: 300000
      max-lifetime: 1800000
      pool-name: CardsHikariPool
  flyway:
    enabled: true
    locations: classpath:db/migration
    validate-on-migrate: true
    clean-disabled: true

vaadin:
  allowed-packages: com.vaadin,org.vaadin,com.flowingcode,org.apolenkov.application
  launch-browser: ${VAADIN_LAUNCH_BROWSER:true}   # Enable browser launch for local development
  productionMode: ${VAADIN_PRODUCTION_MODE:false}  # Development mode for local development

# Server configuration
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: ${SERVER_COMPRESSION_ENABLED:true}
    min-response-size: ${SERVER_COMPRESSION_MIN_SIZE:512}
    mime-types:
      - text/html
      - text/css
      - application/javascript
      - application/json
      - image/svg+xml
      - application/xml
  http2:
    enabled: ${SERVER_HTTP2_ENABLED:true}

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,info,metrics,prometheus}
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_SHOW_DETAILS:when-authorized}
      show-components: ${MANAGEMENT_HEALTH_SHOW_COMPONENTS:when-authorized}
  metrics:
    enable:
      jvm: ${MANAGEMENT_METRICS_JVM:true}
      jdbc: ${MANAGEMENT_METRICS_JDBC:true}
      hikaricp: ${MANAGEMENT_METRICS_HIKARI:true}
      logback: ${MANAGEMENT_METRICS_LOGBACK:true}
  prometheus:
    metrics:
      export:
        enabled: ${MANAGEMENT_PROMETHEUS_ENABLED:true}

app:
  cache:
    user:
      ttl-minutes: ${CACHE_USER_TTL:30}
      max-size: ${CACHE_USER_MAX_SIZE:1000}
    decks:
      ttl-ms: ${CACHE_DECKS_TTL:60000}  # 1 minute (UI-scoped cache)
      max-size: ${CACHE_DECKS_MAX_SIZE:1000}
    known-cards:
      ttl-ms: ${CACHE_KNOWN_CARDS_TTL:300000}  # 5 minutes (less volatile than decks)
      max-size: ${CACHE_KNOWN_CARDS_MAX_SIZE:1000}
    pagination-count:
      ttl-ms: ${CACHE_PAGINATION_COUNT_TTL:60000}  # 1 minute (dev/test default, prod uses 5 minutes)
      max-size: ${CACHE_PAGINATION_COUNT_MAX_SIZE:500}
  ui:
    search:
      debounce-ms: ${SEARCH_DEBOUNCE_MS:300}  # Debouncing timeout for search fields
    pagination:
      page-size: ${PAGINATION_PAGE_SIZE:50}  # Number of items per page in lists
  monitoring:
    slow-query-threshold-ms: ${SLOW_QUERY_THRESHOLD:100}
    hikari:
      enabled: ${HIKARI_MONITORING_ENABLED:true}
      log-interval-ms: ${HIKARI_LOG_INTERVAL:60000}
    cache:
      enabled: ${CACHE_MONITORING_ENABLED:true}  # Enabled for performance monitoring
      log-interval-ms: ${CACHE_LOG_INTERVAL:300000}  # 5 minutes
  security:
    max-failed-attempts: ${MAX_FAILED_ATTEMPTS:5}
    failed-attempts-window-minutes: ${FAILED_ATTEMPTS_WINDOW:15}

  # Data seeding configuration (production profile)
  seed:
    demo:
      enabled: ${SEED_DEMO_DATA:true}
      admin-password: ${DEMO_ADMIN_PASSWORD:admin}
      user-password: ${DEMO_USER_PASSWORD:user}
    test:
      enabled: ${GENERATE_TEST_DATA:false}
      test-user-password: ${TEST_USER_PASSWORD:testPassword123}
      batch:
        users: ${BATCH_SIZE_USERS:100}
      limits:
        users: ${LIMIT_USERS:100}
        decks-per-user: ${LIMIT_DECKS:10}
        cards-per-deck: ${LIMIT_CARDS:50}
        news: ${LIMIT_NEWS:50}
---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    org.springframework.jdbc.core: DEBUG
    org.apolenkov.application: DEBUG

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test

logging:
  level:
    org.springframework.jdbc.core: INFO
    org.apolenkov.application: INFO

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false

logging:
  level:
    org.springframework: WARN
    org.springframework.jdbc.core: INFO
    org.springframework.boot: INFO
    org.apolenkov.application: INFO
    org.apolenkov.application.audit: INFO
    org.atmosphere: WARN
    org.flywaydb: INFO
    com.vaadin: WARN
    com.zaxxer.hikari: INFO
