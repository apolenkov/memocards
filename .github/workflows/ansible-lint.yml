---
name: Ansible Quality Checks

on:
  push:
    branches: [master]
    paths:
      - 'ansible/**'
      - '.github/workflows/ansible-lint.yml'
  pull_request:
    branches: [master]
    paths:
      - 'ansible/**'
      - '.github/workflows/ansible-lint.yml'

# Only one concurrent ansible-lint run per branch/PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ansible-lint:
    name: Ansible Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5

    defaults:
      run:
        working-directory: ansible

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: 'ansible/requirements.txt'

      - name: Install Ansible and Collections
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          ansible-galaxy collection install community.docker ansible.posix community.general

      - name: Verify installations
        run: |
          ansible --version
          ansible-lint --version
          ansible-galaxy collection list

      - name: Run ansible-lint (production profile)
        run: |
          ansible-lint --profile production playbooks/*.yml roles/*/

      - name: Check YAML formatting
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: ansible/
          config_data: |
            extends: default
            rules:
              line-length:
                max: 120
                level: warning
              indentation:
                spaces: 2
                indent-sequences: true
              comments:
                min-spaces-from-content: 1
              truthy:
                allowed-values: ['true', 'false', 'yes', 'no']

      - name: Syntax Check Playbooks
        run: |
          for playbook in playbooks/*.yml; do
            echo "Checking $playbook..."
            ansible-playbook --syntax-check "$playbook" --vault-password-file <(echo "dummy")
          done

  ansible-security:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for trufflehog

      - name: Detect secrets in Ansible files (PR only)
        if: github.event_name == 'pull_request'
        uses: trufflesecurity/trufflehog@main
        with:
          path: ansible/
          base: ${{ github.event.pull_request.base.sha }}
          head: ${{ github.event.pull_request.head.sha }}

      - name: Check for hardcoded credentials
        run: |
          echo "Checking for hardcoded passwords, tokens, keys in Ansible files..."
          
          # Find hardcoded credentials (exclude only Jinja2 variables and vault file)
          FOUND=$(grep -r -i -E "(password|token|secret|key)\s*[:=]\s*['\"]?[a-zA-Z0-9]{8,}" ansible/ \
            --exclude-dir=.git \
            --exclude=secrets.yml \
            | grep -v '{{.*}}' \
            || true)
          
          if [ -n "$FOUND" ]; then
            echo "❌ Hardcoded credentials found:"
            echo "$FOUND"
            echo ""
            echo "💡 All secrets must be in ansible/secrets.yml (encrypted with Ansible Vault)"
            exit 1
          fi
          
          echo "✅ No hardcoded credentials detected"

  summary:
    name: Quality Summary
    runs-on: ubuntu-latest
    needs: [ansible-lint, ansible-security]
    if: always()

    steps:
      - name: Check results
        run: |
          if [ "${{ needs.ansible-lint.result }}" == "success" ] && \
             [ "${{ needs.ansible-security.result }}" == "success" ]; then
            echo "✅ All Ansible quality checks passed!"
            exit 0
          else
            echo "❌ Some checks failed:"
            echo "  - ansible-lint: ${{ needs.ansible-lint.result }}"
            echo "  - ansible-security: ${{ needs.ansible-security.result }}"
            exit 1
          fi

