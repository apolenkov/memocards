name: Ansible Lint and Syntax Check

on:
  workflow_dispatch:  # Manual trigger
  workflow_call:  # Called from main.yml (tags) and pr.yml
    secrets:
      ANSIBLE_VAULT_PASSWORD:
        required: false
        description: 'Ansible Vault password for decrypting secrets.yml'

jobs:
  ansible-lint:
    name: Ansible Syntax Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    env:
      # Make secret available as env var for consistent access in both direct and workflow_call modes
      VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
          cache: 'pip'
      
      - name: Install Ansible and dependencies
        run: |
          cd ansible
          pip install -r requirements.txt
      
      - name: Cache Ansible collections
        uses: actions/cache@v4
        with:
          path: ~/.ansible/collections
          key: ${{ runner.os }}-ansible-collections-${{ hashFiles('ansible/requirements.yml') }}
          restore-keys: |
            ${{ runner.os }}-ansible-collections-
      
      - name: Install Ansible collections
        run: |
          cd ansible
          ansible-galaxy collection install -r requirements.yml
      
      - name: Create vault password file
        if: env.VAULT_PASSWORD != ''
        run: |
          cd ansible
          echo "$VAULT_PASSWORD" > .vault_pass
          chmod 600 .vault_pass

      - name: Run ansible-playbook syntax check
        run: |
          cd ansible
          
          EXIT_CODE=0
          for playbook in playbooks/*.yml; do
            echo "🔍 Checking $playbook..."
            if ansible-playbook --syntax-check "$playbook"; then
              echo "  ✅ $playbook - OK"
            else
              echo "  ❌ $playbook - FAILED"
              [ ! -f .vault_pass ] && echo "::warning::Missing ANSIBLE_VAULT_PASSWORD secret"
              EXIT_CODE=1
            fi
          done
          
          if [ $EXIT_CODE -eq 0 ]; then
            echo "✅ All playbooks passed syntax check"
          fi
          exit $EXIT_CODE

      - name: Run ansible-lint
        run: |
          cd ansible
          if command -v ansible-lint &> /dev/null; then
            for playbook in playbooks/*.yml; do
              echo "Linting $playbook..."
              ansible-lint "$playbook" || true
            done
          else
            echo "::notice::ansible-lint not available, skipping"
          fi

      - name: Cleanup vault password file
        if: always()
        run: |
          cd ansible
          if [ -f .vault_pass ]; then
            shred -u .vault_pass || rm -f .vault_pass
          fi
      
