---
name: Pull Request Validation

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]
# Allow only one concurrent PR validation per PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

env:
  # Build Configuration
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true"
  TESTCONTAINERS_REUSE_ENABLE: "true"

jobs:
  dependency-review:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      pull-requests: write
    # Only run on public repositories (requires GitHub Advanced Security for private repos)
    if: github.event.repository.visibility == 'public'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          # Fail on high or critical vulnerabilities
          fail-on-severity: high
          # Comment on PR with findings
          comment-summary-in-pr: always
          # Deny copyleft licenses (blacklist approach - more flexible)
          # Allows: MIT, Apache-2.0, BSD-*, ISC, and other permissive licenses
          deny-licenses: GPL-2.0, GPL-3.0, LGPL-2.0, LGPL-3.0

  test:
    name: Run Test Suite
    uses: ./.github/workflows/test.yml
    with:
      gradle-opts: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true"
      testcontainers-reuse: "true"

  # Check if Ansible files were changed in this PR
  check-ansible-changes:
    name: Check Ansible Changes
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      ansible_changed: ${{ steps.check.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check if Ansible files modified
        id: check
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          
          if echo "$CHANGED_FILES" | grep -q "^ansible/"; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Ansible files were modified - will run quality checks"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "⏭️  No Ansible files changed - skipping validation"
          fi

  # Reuse the full ansible-lint.yml workflow (DRY principle!)
  ansible-validation:
    name: Ansible Quality Checks
    needs: check-ansible-changes
    if: needs.check-ansible-changes.outputs.ansible_changed == 'true'
    uses: ./.github/workflows/ansible-lint.yml
    secrets: inherit
