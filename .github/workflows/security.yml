name: Security Audit

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true"

jobs:
  dependency-check:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: false
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Run OWASP Dependency Check
        run: ./gradlew dependencyCheckAnalyze
        
      - name: Upload dependency check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-check-report
          path: |
            build/reports/dependency-check/
          retention-days: 30

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-read-only: false
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Run SpotBugs security analysis
        run: ./gradlew spotbugsMain spotbugsTest
        
      - name: Upload SpotBugs security report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: spotbugs-security-report
          path: |
            build/reports/spotbugs/
          retention-days: 30

  vulnerability-summary:
    name: Generate Vulnerability Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, security-analysis]
    if: always()
    
    steps:
      - name: Download dependency check report
        uses: actions/download-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-reports/
          
      - name: Download SpotBugs report
        uses: actions/download-artifact@v4
        with:
          name: spotbugs-security-report
          path: spotbugs-reports/
          
      - name: Generate summary
        run: |
          echo "# Security Audit Summary" > security-summary.md
          echo "Generated on: $(date)" >> security-summary.md
          echo "" >> security-summary.md
          
          echo "## Dependency Vulnerabilities" >> security-summary.md
          if [ -f "dependency-reports/dependency-check-report.html" ]; then
            echo "✅ Dependency check completed. Check the HTML report for details." >> security-summary.md
          else
            echo "❌ Dependency check report not found." >> security-summary.md
          fi
          
          echo "" >> security-summary.md
          echo "## Static Analysis Security Issues" >> security-summary.md
          if [ -f "spotbugs-reports/main.xml" ] || [ -f "spotbugs-reports/test.xml" ]; then
            echo "✅ SpotBugs security analysis completed. Check the XML reports for details." >> security-summary.md
          else
            echo "❌ SpotBugs security report not found." >> security-summary.md
          fi
          
          echo "" >> security-summary.md
          echo "## Next Steps" >> security-summary.md
          echo "1. Review the generated reports" >> security-summary.md
          echo "2. Address any HIGH or CRITICAL vulnerabilities" >> security-summary.md
          echo "3. Update dependencies if needed" >> security-summary.md
          
      - name: Upload security summary
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-summary
          path: security-summary.md
          retention-days: 30
