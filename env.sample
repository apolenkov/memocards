# =============================================================================
# MEMO CARDS - Environment Variables Sample
# =============================================================================
# Copy this file to .env and adjust values for your environment
# All values shown here are DEFAULTS from application.yml

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
DB_URL=jdbc:postgresql://localhost:5432/memocards
DB_USER=memocards_user
DB_PASSWORD=postgres

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# User Cache (session-scoped)
CACHE_USER_TTL=30
CACHE_USER_MAX_SIZE=1000

# Decks Cache (UI-scoped, 1 minute TTL)
CACHE_DECKS_TTL=60000
CACHE_DECKS_MAX_SIZE=1000

# Known Cards Cache (less volatile, 5 minutes TTL)
CACHE_KNOWN_CARDS_TTL=300000
CACHE_KNOWN_CARDS_MAX_SIZE=1000

# Pagination Count Cache
CACHE_PAGINATION_COUNT_TTL=60000
CACHE_PAGINATION_COUNT_MAX_SIZE=500

# Cache Monitoring
CACHE_MONITORING_ENABLED=true
CACHE_LOG_INTERVAL=300000

# =============================================================================
# UI CONFIGURATION
# =============================================================================
SEARCH_DEBOUNCE_MS=300
PAGINATION_PAGE_SIZE=50

# =============================================================================
# MONITORING & PERFORMANCE
# =============================================================================
SLOW_QUERY_THRESHOLD=100
HIKARI_MONITORING_ENABLED=false
HIKARI_LOG_INTERVAL=60000

# =============================================================================
# SECURITY
# =============================================================================
MAX_FAILED_ATTEMPTS=5
FAILED_ATTEMPTS_WINDOW=15

# =============================================================================
# DATA SEEDING (Development Only)
# =============================================================================

# Demo Users (admin and regular user with predefined credentials)
SEED_DEMO_DATA=true
DEMO_ADMIN_PASSWORD=admin
DEMO_USER_PASSWORD=user

# Test Data Generation (bulk data for load testing)
GENERATE_TEST_DATA=false
TEST_USER_PASSWORD=testPassword123

# Test Data Limits
BATCH_SIZE_USERS=100
LIMIT_USERS=100
LIMIT_DECKS=10
LIMIT_CARDS=50
LIMIT_NEWS=50

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Application Image
APP_IMAGE=ghcr.io/apolenkov/memocards:latest

# Spring Profile
SPRING_PROFILES_ACTIVE=dev

# JVM Options (optimized for containers)
JAVA_OPTS=--XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0

# =============================================================================
# JIB CONFIGURATION
# =============================================================================

# Registry Configuration
GITHUB_TOKEN=ADD_YOUR_TOKEN_HERE
GITHUB_REPOSITORY=apolenkov/memocards
GITHUB_ACTOR=ADD_YOUR_USERNAME_HERE

# =============================================================================
# IMPORTANT: JIB PUSH CONFIGURATION
# =============================================================================
# To use jib-push commands, you need to:
# 1. Set your GitHub token: GITHUB_TOKEN=your_token_here
# 2. Set your GitHub username: GITHUB_ACTOR=your_username
# 3. Uncomment the lines above
# 4. Run: make jib-push

# =============================================================================
# VAADIN CONFIGURATION
# =============================================================================
# Browser launch (dev: true, prod: false)
VAADIN_LAUNCH_BROWSER=true
# Production mode (dev: false, prod: true)
VAADIN_PRODUCTION_MODE=false

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
SERVER_PORT=8080
SERVER_COMPRESSION_ENABLED=true
SERVER_COMPRESSION_MIN_SIZE=512
SERVER_HTTP2_ENABLED=true

# =============================================================================
# MANAGEMENT CONFIGURATION
# =============================================================================
MANAGEMENT_ENDPOINTS=health,info,metrics,prometheus
MANAGEMENT_HEALTH_SHOW_DETAILS=when-authorized
MANAGEMENT_HEALTH_SHOW_COMPONENTS=when-authorized
MANAGEMENT_METRICS_JVM=true
MANAGEMENT_METRICS_JDBC=true
MANAGEMENT_METRICS_HIKARI=true
MANAGEMENT_METRICS_LOGBACK=true
MANAGEMENT_PROMETHEUS_ENABLED=true
